()
1 总是返回最后一个表达式
eg.
-------------------------------------------------------------
  var f = (function f(){ return "1"; }, function g(){ return 2; })();
  f;//2
--------------------------------------------------------------
 var a=(123,125,136,222);
 a;//222
--------------------------------------------------------------

2 立即执行函数
eg.
--------------------------------------------------------------
var setFn = function() {
    console.log(2)
}();//2,函数表达式 立即执行函数,立即执行函数里面的函数必须是函数表达式，所以由var setFn = function() {}()可以理解为在匿名函数前加了 = 运算符后，将函数声明转化为函数表达式，所以拿！，+，-，（）将函数声明转化为函数表达式

!function(){
    console.log(1)
}()
// 1
    
+function(){
    console.log(2)
}()
// 2
    
-function(){
    console.log(3)
}()
// 3
    
(function(){
    console.log(4)
})()
// 4

-------------------------------------
匿名函数

function(){
    console.log(1)
}();// 报错，函数需要函数名
解析： 虽然匿名函数属于函数表达式，但未进行赋值，所以javascript解析时将开头的function当做函数声明，故报错提示需要函数名
---------------------------------------------------------------