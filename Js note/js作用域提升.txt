hosting:javascript的变量声明具有hoisting机制，JavaScript引擎在执行的时候，会把所有变量的声明都提升到当前作用域的最前面，没写var的变量不提升
 函数声明  和 变量声明 会提升到作用域的顶部，函数表达式只会提升对应的变量，定义部分不会提升
 
-------------①函数声明，整体提升--------------
m();//1
function m(){ return 1;}
----------------------------------------------
------------②函数表达式只会提升对应的变量，定义部分不会提升-----------
m3();//报错: m3 is not a function
var m3=function(){ return 1;}
相当于↓
var m3;
m3();//报错: m3 is not a function
m3=function(){ return 1;}
-----------------------------
console.log(m3);//undefine
var m3=function(){ return 1;}
-----------③在if 条件判断语句中的函数声明不会提升，函数声明成为了函数表达式，表达式在预编译里不提前----------------------------------
//在if 条件判断语句中的函数声明不会提升
var x = 1;
if (function f(){}) {
x += typeof f;
}
x;//"1undefined"
----------③在if 块语句中会得到提升-------------------
console.log(m8);//undefine
if(true)
{
	var m8=2;
}
相当于↓
var m8;
console.log(m8);//undefine
if(true)
{
	 m8=2;
}
--------------
console.log(m10);//undefine
if(true)
{
	function m10(){}
}
相当于↓
var m10;
console.log(m10);//undefine
if(true)
{
	//function m10(){}
	m10 =function(){}
}
---------------------------------------------------------------------------