定义和用法
parseInt() 函数可解析一个字符串，并返回一个整数。把其他进制的数字文本形式 转为10进制的整数

语法
parseInt(string, radix)
参数	描述
string	必需。要被解析的字符串。如果不是字符串先调用 toStri()方法 转为字符串
---------eg.------------------
var a={age:10};
parseInt(a);//NAN
--------------------------
var a={age:10,toString:function(){ return this.age}};
parseInt(a);10
-------------------------------------

radix	可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。
--------------省略的情况-------------
如果省略该参数或其值为 0，则数字将以 10 为基础来解析。
如果它以 “0x” 或 “0X” 开头，将以 16 为基数。
如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。
------------------------------------

！！！提示和注释
注释：开头和结尾的空格是允许的。会被trim截取掉，但字符串中间的空格就是无效的字符了
注释：只有字符串中的第一个数字会被返回。第一个不是有效的数值返回NAN
-------------eg--------------------------------------------------------------------
parseInt("2f 15 yyy",16);//47 //只会截取到第一个有效数字，后面的 15 yyy 忽略
parseInt("2f15 yyy",16);//12053  //2f15为一个整体中间没有空格

parseInt("yyy 15 if",16);//NAN  //yyy开头  字母y超过基数16的有效范围[0-9 a-f],所以没办法转换，返回NAN
parseInt("15yyy if",16);//21    //字符串中的第一个有效数字15，

----------------------------------------------------------------------------------------------

提示：如果字符串的第一个字符不能被转换为数字，那么 parseFloat() 会返回 NaN。

--------------------------------------------------------------------------

测试题目

['1', '2', '3'].map(parseInt) 结果和原因

考察点: 数组的map方法中的回调函数，parseInt函数的使用

arr.map(function callback(currentValue[,index[,array]]){ 返回一个值代替数组中的原来的值,没有返回值的时候该值为 undefined })
------------------------------
['1', '2', '3'].map(parseInt)
转换为:
"1": parseInt("1",0);//radix为0,转为10进制的整数=>1
"2": parseInt("2",1);//radix为1,不在2~36范围内 =>NAN
"3": parseInt("3",2);//radix为2,第一个字符为3,不在2进制的有效数字【0,1】内 返回=>NAN

数组的map方法原先数组有几个就返回几个，所以结果返回数组：[1,NAN,NAN]

------------------------------------------

